@base_address = http://localhost:8000/api
@TOKEN =
@ID =

############################################################AUTH
### Register
POST {{base_address}}/register
Content-Type: application/json

{
  "email": "test@test.com",
  "password": "testpassword",
  "firstname": "test",
  "lastname": "test",
  "address": "123 Main Street",
  "city": "Paris",
  "postal_code": "75001",
  "phone": "0612345678",
  "is_pro": 0
}

###  Login after register
POST {{base_address}}/login
Content-Type: application/json

{
    "email": "test@test.com",
    "password": "testpassword"
}

> {%
    // parse the JSON response
    const data = response.body;
    // store token in a global variable
    client.global.set("TOKEN", data.authorisation.token);
%}

### Refresh
GET {{base_address}}/refresh
Authorization: Bearer {{TOKEN}}

> {%
    // parse the JSON response
    const data = response.body;
    // store token in a global variable
    client.global.set("TOKEN", data.authorisation.token);
%}

### Logout
POST {{base_address}}/logout
Authorization: Bearer {{TOKEN}}

############################################################ USER

###  Login
POST {{base_address}}/login
Content-Type: application/json

{
    "email": "test@test.com",
    "password": "testpassword"
}

> {%
    // parse the JSON response
    const data = response.body;
    // store token in a global variable
    client.global.set("TOKEN", data.authorisation.token);
%}

### GET USER INFOS
GET {{base_address}}/user
Authorization: Bearer {{TOKEN}}

### Update user infos
POST {{base_address}}/user
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
  "email": "test1@test1.com",
  "password": "testpassword1",
  "firstname": "test",
  "lastname": "test",
  "address": "123 Main Street",
  "city": "Paris",
  "postal_code": "75001",
  "phone": "0612345678",
  "is_pro": 0
}

### Delete user infos
DELETE {{base_address}}/user
Authorization: Bearer {{TOKEN}}

############################################################ ADMIN USER
### Login token
POST {{base_address}}/login
Content-Type: application/json

{
    "email": "dou@dou.com",
    "password": "doudoudoudou"
}

> {%
    // parse the JSON response
    const data = response.body;
    // store token in a global variable
    client.global.set("TOKEN", data.authorisation.token);
%}

### Create a user
POST {{base_address}}/admin/user
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
  "email": "test@test.com",
  "password": "testpassword",
  "firstname": "test",
  "lastname": "test",
  "address": "123 Main Street",
  "city": "Paris",
  "postal_code": "75001",
  "phone": "0612345678",
  "role_id": 2,
  "is_vip": 0,
  "is_pro": 0
}
> {%
    // parse the JSON response
    const data = response.body;
    // store token in a global variable
    client.global.set("ID", data.id);
%}

### Login user
POST {{base_address}}/login
Content-Type: application/json

{
    "email": "test@test.com",
    "password": "testpassword"
}

### Get all users
GET {{base_address}}/admin/user
Authorization: Bearer {{TOKEN}}

### Get single user
GET {{base_address}}/admin/user/{{ID}}
Authorization: Bearer {{TOKEN}}

### Update user
POST {{base_address}}/admin/user/{{ID}}
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
    "email": "test1@test1.com",
    "password": "testpassword1",
    "firstname": "test",
    "lastname": "test",
    "address": "123 Main Street",
    "city": "Paris",
    "postal_code": "75001",
    "phone": "0612345678",
    "role_id": 1,
    "is_vip": 1,
    "is_pro": 1
}

### Delete user
DELETE {{base_address}}/admin/user/{{ID}}
Authorization: Bearer {{TOKEN}}

############################################################ ROLE

### GET all roles
GET {{base_address}}/role
Authorization: Bearer {{TOKEN}}

### POST one role
POST {{base_address}}/role
Content-Type: application/json
Authorization: Bearer {{TOKEN}}

{
    "role_name": "Super mega giga admin",
    "priority": 9999
}
> {%
    // parse the JSON response
    const data = response.body;
    // store token in a global variable
    client.global.set("ID", data.id);
%}

### GET one role
GET {{base_address}}/role/{{ID}}
Authorization: Bearer {{TOKEN}}

### PUT one role
POST {{base_address}}/role/{{ID}}
Content-Type: application/json
Authorization: Bearer {{TOKEN}}

{
    "role_name": "Super mega giga admin deluxe",
    "priority": 10000
}

### DELETE one role
DELETE {{base_address}}/role/{{ID}}
Authorization: Bearer {{TOKEN}}

############################################################ BOOKING

### POST one booking
POST {{base_address}}/booking
Content-Type: application/json
Authorization: Bearer {{TOKEN}}

{
    "check_in": "2026-11-26",
    "check_out": "2026-12-06",
    "number_of_persons": 3,
    "services": [17, 15],
    "rooms": [1, 2]
}
> {%
    // parse the JSON response
    const data = response.body;
    // store token in a global variable
    client.global.set("ID", data.id);
%}

### GET all user bookings
GET {{base_address}}/booking/user
Authorization: Bearer {{TOKEN}}

### GET one user booking
GET {{base_address}}/booking/{{ID}}
Authorization: Bearer {{TOKEN}}

### PUT one booking
POST {{base_address}}/booking/{{ID}}
Content-Type: application/json
Authorization: Bearer {{TOKEN}}

{
    "check_in": "2027-11-26",
    "check_out": "2028-12-06",
    "number_of_persons": 4,
    "services": [17, 15],
    "rooms": [1, 2, 3]
}

### DELETE one booking
DELETE {{base_address}}/booking/{{ID}}
Authorization: Bearer {{TOKEN}}

############################################################ ADMIN BOOKING

### GET all bookings
GET {{base_address}}/admin/booking
Authorization: Bearer {{TOKEN}}

### POST one booking
POST {{base_address}}/admin/booking
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
    "check_in": "2026-11-26",
    "check_out": "2026-12-06",
    "user_id": 21,
    "number_of_persons": 3,
    "services": [17, 15],
    "rooms": [1, 2]
}
> {%
    // parse the JSON response
    const data = response.body;
    // store token in a global variable
    client.global.set("ID", data.id);
%}

### GET all user bookings
GET {{base_address}}/admin/booking/user-21
Authorization: Bearer {{TOKEN}}

### GET one booking
GET {{base_address}}/admin/booking/{{ID}}
Authorization: Bearer {{TOKEN}}

### PUT one booking
POST {{base_address}}/admin/booking/{{ID}}
Content-Type: application/json
Authorization: Bearer {{TOKEN}}

{
    "check_in": "2027-11-26",
    "check_out": "2028-12-06",
    "user_id": 22,
    "number_of_persons": 4,
    "services": [17, 15],
    "rooms": [1, 2, 3]
}

### DELETE one booking
DELETE {{base_address}}/admin/booking/{{ID}}
Authorization: Bearer {{TOKEN}}


############################################################ SERVICES
### GET all services by language:  1 = fr, 2 = en
GET {{base_address}}/service/lang-1

### POST one service
POST {{base_address}}/service
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
    "name": "TEST",
    "title": "TEST",
    "short_description": "TEST",
    "description": "TEST",
    "link": "voiturier",
    "price_in_cent": 10000,
    "duration_in_day": 1,
    "is_per_person": 1,
    "display_order": "0",
    "language_id": 1
}
> {%
    // parse the JSON response
    const data = response.body;
    // store token in a global variable
    client.global.set("ID", data.id);
%}

### GET one service
GET {{base_address}}/service/{{ID}}

### PUT one service
POST {{base_address}}/service/{{ID}}
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
    "name": "TEST1",
    "title": "TEST1",
    "short_description": "TEST1",
    "description": "TEST1",
    "link": "voiturier",
    "price_in_cent": 10000,
    "duration_in_day": 1,
    "is_per_person": 1,
    "display_order": "0",
    "language_id": 1
}

### DELETE one service
DELETE {{base_address}}/service/{{ID}}
Authorization: Bearer {{TOKEN}}

############################################################CONTENTS
### GET all contents by language:  1 = fr, 2 = en
GET {{base_address}}/content/lang-1

### POST one content
POST {{base_address}}/content
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
    "name": "content-room",
    "title": "Our Rooms",
    "short_description": "TEST",
    "description": "TEST",
    "landing_page_display": 1,
    "navbar_display": 0,
    "display_order": "1",
    "language_id": 2
}
> {%
    // parse the JSON response
    const data = response.body;
    // store token in a global variable
    client.global.set("ID", data.id);
%}

### GET one content
GET {{base_address}}/content/{{ID}}

### PUT one content
POST {{base_address}}/content/{{ID}}
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
    "name": "content-room",
    "title": "Our Rooms",
    "short_description": "TEST1",
    "description": "TEST1",
    "landing_page_display": 1,
    "navbar_display": 0,
    "display_order": "1",
    "language_id": 2
}

### DELETE one content
DELETE {{base_address}}/content/{{ID}}
Authorization: Bearer {{TOKEN}}

############################################################NEWS
### GET all newss by language:  1 = fr, 2 = en
GET {{base_address}}/news/lang-1

### POST one news
POST {{base_address}}/news
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
    "name": "news-room",
    "title": "Our Rooms",
    "short_description": "TEST",
    "description": "TEST",
    "display_order": "1",
    "language_id": 1
}
> {%
    // parse the JSON response
    const data = response.body;
    // store token in a global variable
    client.global.set("ID", data.id);
%}

### GET one news
GET {{base_address}}/news/{{ID}}

### PUT one news
POST {{base_address}}/news/{{ID}}
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
    "name": "news-room",
    "title": "Our Rooms",
    "short_description": "TEST1",
    "description": "TEST1",
    "display_order": "1",
    "language_id": 2
}

### DELETE one news
DELETE {{base_address}}/news/{{ID}}
Authorization: Bearer {{TOKEN}}

############################################################ROOMS
### GET all rooms by language:  1 = fr, 2 = en
GET {{base_address}}/room/lang-1

### GET all rooms available by language :   1 = fr, 2 = en
GET {{base_address}}/room/lang-1/available
Content-Type: application/json

{
    "check_in": "2027-05-23",
    "check_out": "2027-05-27",
    "category": 6
}

### POST one room
POST {{base_address}}/room
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
    "name": "Nikolaus, Pagac and Schulist",
    "number": 1011,
    "room_name": "Gusikowski",
    "description": "super chambre",
    "rooms_category_id": 4,
    "display_order": 9,
    "language_id": 1
}
> {%
    // parse the JSON response
    const data = response.body;
    // store token in a global variable
    client.global.set("ID", data.id);
%}

### GET one room
GET {{base_address}}/room/{{ID}}

### PUT one room
POST {{base_address}}/room/{{ID}}
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
    "name": "Nikolaus, Pagac and Schulist test",
    "number": 1011,
    "room_name": "Gusikowskitest",
    "description": "super chambre test",
    "rooms_category_id": 4,
    "display_order": 9,
    "language_id": 1
}

### DELETE one room
DELETE {{base_address}}/room/{{ID}}
Authorization: Bearer {{TOKEN}}


############################################################REVIEWS
### GET all reviews
GET {{base_address}}/review

### POST one review
POST {{base_address}}/review
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
    "rate": 5,
    "review_content": "not bad at all",
    "display_order": 546
}
> {%
    // parse the JSON response
    const data = response.body;
    // store token in a global variable
    client.global.set("ID", data.id);
%}

### GET all users reviews
GET {{base_address}}/review/user
Authorization: Bearer {{TOKEN}}

### GET one review
GET {{base_address}}/review/{{ID}}
Authorization: Bearer {{TOKEN}}

### PUT one review
POST {{base_address}}/review/{{ID}}
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
    "rate": 2,
    "review_content": "suck my dick",
    "display_order": 69
}

### DELETE one review
DELETE {{base_address}}/review/{{ID}}
Authorization: Bearer {{TOKEN}}

############################################################FEATURES
### GET all rooms-features by language:  1 = fr, 2 = en
GET {{base_address}}/rooms-feature/lang-1

### POST one rooms-feature
POST {{base_address}}/rooms-feature
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
    "name": "tv_enTEST",
    "feature_name": "Tv",
    "description": "TEST",
    "rooms_categories": [1, 2],
    "display_order": "1",
    "language_id": 2
}
> {%
    // parse the JSON response
    const data = response.body;
    // store token in a global variable
    client.global.set("ID", data.id);
%}

### GET one rooms-feature
GET {{base_address}}/rooms-feature/{{ID}}

### PUT one rooms-feature
POST {{base_address}}/rooms-feature/{{ID}}
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
    "name": "tv_enTEST1",
    "feature_name": "Tv1",
    "description": "TEST1",
    "rooms_categories": [2],
    "display_order": "1",
    "language_id": 2
}

### DELETE one rooms-feature
DELETE {{base_address}}/rooms-feature/{{ID}}
Authorization: Bearer {{TOKEN}}

############################################################CATEGORIES
### GET all rooms-categorys by language:  1 = fr, 2 = en
GET {{base_address}}/rooms-category/lang-1

### POST one rooms-category
POST {{base_address}}/rooms-category
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
    "name": "standard_cat_enTEST",
    "category_name": "Standard RoomsTEST",
    "description": "The artichoke quality at a reasonable price.TEST",
    "price_in_cent": 25000,
    "bed_size": 3,
    "rooms_features": [1, 2],
    "display_order": "1",
    "language_id": 2
}
> {%
    // parse the JSON response
    const data = response.body;
    // store token in a global variable
    client.global.set("ID", data.id);
%}

### GET one rooms-category
GET {{base_address}}/rooms-category/{{ID}}

### PUT one rooms-category
POST {{base_address}}/rooms-category/{{ID}}
Authorization: Bearer {{TOKEN}}
Content-Type: application/json

{
    "name": "standard_cat_enTEST1",
    "category_name": "Standard RoomsTEST1",
    "description": "The artichoke quality at a reasonable price.TEST1",
    "price_in_cent": 25000,
    "bed_size": 3,
    "rooms_features": [1, 2, 3],
    "display_order": "1",
    "language_id": 2
}

### DELETE one rooms-category
DELETE {{base_address}}/rooms-category/{{ID}}
Authorization: Bearer {{TOKEN}}

############################################################LANGUAGE
### GET all language
GET {{base_address}}/language

### GET one language
GET {{base_address}}/language/1
