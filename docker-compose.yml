services:
  web:
    container_name: nginx
    build:
      context: .
      dockerfile: ./docker/production/nginx/Dockerfile
    restart: always
    volumes:
      - laravel-storage:/var/www/storage:ro
    networks:
      - laravel
    ports:
      - "8080:80"
    depends_on:
      php-fpm:
        condition: service_healthy

  php-fpm:
    container_name: php-fpm
    build:
      context: .
      dockerfile: ./docker/common/php-fpm/Dockerfile
      target: production
    restart: unless-stopped
    volumes:
      - laravel-storage:/var/www/storage
    env_file:
      - .env
    networks:
      - laravel
    healthcheck:
      test: ["CMD-SHELL", "php-fpm-healthcheck || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
        mysql:
         condition: service_healthy

  mysql:
    container_name: mysql
    build:
        context: .
        dockerfile: ./docker/production/mysql/Dockerfile
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - laravel
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "mysql" ]
      interval: 10s
      timeout: 20s
      retries: 5

networks:
  laravel:
    driver: bridge

volumes:
  mysql-data:
  laravel-storage:
